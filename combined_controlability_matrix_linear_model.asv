clear;clc

function sys = linear_model
	% Transfer Function generated by 20-sim Linear System Editor.

	% check if we are running in Matlab or Octave
	in_Octave = (exist('OCTAVE_VERSION','builtin') == 5);
	in_Matlab = ~in_Octave;


	% names of the variables

	% linear system matrices
	A(1,1) = 0.0;
	A(1,2) = 63.8162093171666;
	A(1,3) = 0.0;
	A(1,4) = 0.0;
	A(1,5) = 0.0;
	A(1,6) = 0.0;
	A(2,1) = 1.62161434954367;
	A(2,2) = 0.00198453350267405;
	A(2,3) = -1.30616676428038;
	A(2,4) = 1.30616676428038;
	A(2,5) = -0.00274908415725799;
	A(2,6) = -0.00274908415725798;
	A(3,1) = 0.0;
	A(3,2) = -3.03637523931079;
	A(3,3) = -474.620056497175;
	A(3,4) = 0.0;
	A(3,5) = 0.0;
	A(3,6) = 8.41230551626591;
	A(4,1) = 0.0;
	A(4,2) = 3.03637523931079;
	A(4,3) = 0.0;
	A(4,4) = -474.620056497175;
	A(4,5) = -8.41230551626591;
	A(4,6) = 0.0;
	A(5,1) = 1.12408907915474;
	A(5,2) = 0.00488237366513838;
	A(5,3) = 1.59912398031093;
	A(5,4) = 8.02601896959543;
	A(5,5) = -0.0168923312080467;
	A(5,6) = 0.00336567008132849;
	A(6,1) = 1.12408907915474;
	A(6,2) = 0.00488237366513838;
	A(6,3) = -8.02601896959543;
	A(6,4) = -1.59912398031093;
	A(6,5) = 0.00336567008132849;
	A(6,6) = -0.0168923312080467;
	B(1,1) = 0.0;
	B(2,1) = 0.0;
	B(3,1) = -3.138;
	B(4,1) = -3.138;
	B(5,1) = 0.0;
	B(6,1) = 0.0;
	C(1,1) = 1.0;
	C(1,2) = 0.0;
	C(1,3) = 0.0;
	C(1,4) = 0.0;
	C(1,5) = 0.0;
	C(1,6) = 0.0;
	D(1,1) = 0.0;



format shorte
	% Transfer Function generated by 20-sim Linear System Editor.

	% check if we are running in Matlab or Octave
	in_Octave = (exist('OCTAVE_VERSION','builtin') == 5);
	in_Matlab = ~in_Octave;


	% names of the variables
	u_names = {
		'TurningAngularVel_output'
	};
	y_names = {
		'TurningAngle_input'
	};
	x_names = {
		'BodyAngleInt_output'; 
		'BodyMomentOfInertia_state'; 
		'MotorL_WindingI_state'; 
		'MotorR_WindingI_state'; 
		'rotTurn_output'; 
		'WheelMass_state'; 
		'WheelMass1_state'
	};
	xdot_names = {
		'BodyAngleInt_input'; 
		'BodyMomentOfInertia_p.e'; 
		'MotorL_WindingI_p.e'; 
		'MotorR_WindingI_p.e'; 
		'rotTurn_input'; 
		'WheelMass_p.e'; 
		'WheelMass1_p.e'
	};

	% linear system matrices
	A(1,1) = 0.0;
	A(1,2) = 63.81620931716656;
	A(1,3) = 0.0;
	A(1,4) = 0.0;
	A(1,5) = 0.0;
	A(1,6) = 0.0;
	A(1,7) = 0.0;
	A(2,1) = 1.6216143495436701;
	A(2,2) = 0.001984533502674049;
	A(2,3) = -1.3061667642803791;
	A(2,4) = 1.3061667642803803;
	A(2,5) = 0.0;
	A(2,6) = -0.0027490841572579867;
	A(2,7) = -0.002749084157257984;
	A(3,1) = 0.0;
	A(3,2) = -3.036375239310785;
	A(3,3) = -474.6200564971751;
	A(3,4) = 0.0;
	A(3,5) = 0.0;
	A(3,6) = 0.0;
	A(3,7) = 8.412305516265912;
	A(4,1) = 0.0;
	A(4,2) = 3.036375239310785;
	A(4,3) = 0.0;
	A(4,4) = -474.6200564971751;
	A(4,5) = 0.0;
	A(4,6) = -8.412305516265912;
	A(4,7) = 0.0;
	A(5,1) = 0.0;
	A(5,2) = 0.0;
	A(5,3) = 0.0;
	A(5,4) = 0.0;
	A(5,5) = 0.0;
	A(5,6) = 27.31494127287626;
	A(5,7) = -27.31494127287626;
	A(6,1) = 1.124089079154744;
	A(6,2) = 0.004882373665138379;
	A(6,3) = 1.5991239803109292;
	A(6,4) = 8.026018969595428;
	A(6,5) = 0.0;
	A(6,6) = -0.016892331208046726;
	A(6,7) = 0.0033656700813284876;
	A(7,1) = 1.1240890791547438;
	A(7,2) = 0.004882373665138376;
	A(7,3) = -8.026018969595428;
	A(7,4) = -1.5991239803109287;
	A(7,5) = 0.0;
	A(7,6) = 0.0033656700813284863;
	A(7,7) = -0.016892331208046722;

    B(1,1) = 0.0;
	B(2,1) = 0.0;
	B(3,1) = 24.0;
	B(4,1) = -24.0;
	B(5,1) = 0.0;
	B(6,1) = 0.0;
	B(7,1) = 0.0;

	B(1,2) = 0.0;
	B(2,2) = 0.0;
	B(3,2) = -3.1380000000000003;
	B(4,2) = -3.1380000000000003;
	B(5,2) = 0.0;
	B(6,2) = 0.0;
	B(7,2) = 0.0;

	C(1,1) = 1.0;
	C(1,2) = 0.0;
	C(1,3) = 0.0;
	C(1,4) = 0.0;
	C(1,5) = 0.0;
	C(1,6) = 0.0;
	C(1,7) = 0.0;


    C(2,1) = 0.0;
	C(2,2) = 0.0;
	C(2,3) = 0.0;
	C(2,4) = 0.0;
	C(2,5) = 1.0;
	C(2,6) = 0.0;
	C(2,7) = 0.0;

	D(1,1) = 1.0;
    D(1,2) = 0.0;
    D(2,1) = 0.0;
    D(2,2) = 1.0;

	

	% generate state-space description of linear model
	SS = ss (A, B, C, D, 0.0);

	% set additional TF info
	if (in_Octave)
		set (SS, 'stname', x_names);
		set (SS, 'inname', u_names);
		set (SS, 'outname', y_names);
	else
		set (SS, 'StateName', x_names);
		set (SS, 'InputName', u_names);
		set (SS, 'OutputName', y_names);
	end

	  % generate transfer function of linear model
    sys = tf (SS);

    % LQR

    x0 = [0; % 
        0;
        0;
        0;
        0;
        0;
        0;];

    Q = [10, 0, 0, 0, 0, 0, 0;
        0, 1, 0, 0, 0, 0, 0;
        0, 0, 1, 0, 0, 0, 0;
        0, 0, 0, 1, 0, 0, 0;
        0, 0, 0, 0, 1, 0, 0;
        0, 0, 0, 0, 0, 1, 0;
        0, 0, 0, 0, 0, 0, 1];
    R = [8 0;
         0 1] * 1;
    K = lqr(A,B,Q,R);
    display (K);

    syscl = ss(A - B*K, B, C, D);

    Kdc = dcgain(syscl)

    eig(A-B*K)
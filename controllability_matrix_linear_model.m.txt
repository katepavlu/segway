function sys = linear_model
	% Transfer Function generated by 20-sim Linear System Editor.

	% check if we are running in Matlab or Octave
	in_Octave = (exist('OCTAVE_VERSION','builtin') == 5);
	in_Matlab = ~in_Octave;


	% names of the variables
	u_names = {
		'pendulum_MSe_effort'
	};
	y_names = {
		'pendulum_rotation'
	};
	x_names = {
		'pendulum_I_state'; 
		'pendulum_rotBeam1_output'
	};
	xdot_names = {
		'pendulum_I_p.e'; 
		'pendulum_rotBeam1_input'
	};

	% linear system matrices
	A(1,1) = -0.5548076923076916;
	A(1,2) = 0.5605714285713341;
	A(2,1) = 25.0;
	A(2,2) = 0.0;
	B(1,1) = 0.10989010989011032;
	B(2,1) = 0.0;
	C(1,1) = 0.0;
	C(1,2) = 1.0;
	D(1,1) = 0.0;
	

    Co = ctrb(A,B);
    display (Co);

    unco = length(A) - rank(Co);
    display (unco);
    
    P = [-5, -6];
    K = place(A,B,P);
    display (K);
	% generate state-space description of linear model
	SS = ss (A, B, C, D, 0.0);
   

    Acl = A - B*K;
    Ecl = eig(Acl);

    syscl = ss(Acl, B, C, D);
    step(syscl)

    Kdc = dcgain(syscl);
    Kr = 1/Kdc;
    display (Kr);
    
	% set additional TF info
	if (in_Octave)
		set (SS, 'stname', x_names);
		set (SS, 'inname', u_names);
		set (SS, 'outname', y_names);
	else
		set (SS, 'StateName', x_names);
		set (SS, 'InputName', u_names);
		set (SS, 'OutputName', y_names);
	end

	% generate transfer function of linear model
	sys = tf (SS);

end